
//*------------Sub Queryy-------------*//

//* 1. 1. Write a query to find the name (first_name, last_name) and the salary of the employees who have a higher salary than the employee whose last_name='Bull'. 

Ans:

MariaDB [atrina]> SELECT FIRST_NAME, LAST_NAME, SALARY 
FROM employees 
WHERE SALARY > 
(SELECT salary FROM employees WHERE last_name = 'Bull');

//*----------------------------------**----------------------------**//
 //* 2. Write a query to find the name (first_name, last_name) of all employees who works in the IT department.
Ans:

MariaDB [atrina]> SELECT first_name, last_name 
FROM employees 
WHERE department_id 
IN (SELECT department_id FROM departments WHERE department_name='IT');

//*----------------------------------**----------------------------**//

//* 3. Write a query to find the name (first_name, last_name) of the employees who have a manager and worked in a USA based department. 
Ans:

MariaDB [atrina]> SELECT first_name, last_name FROM employees 
WHERE manager_id in (select employee_id 
FROM employees WHERE department_id 
IN (SELECT department_id FROM departments WHERE location_id 
IN (select location_id from locations where country_id='US')));

//*----------------------------------**----------------------------**//
//* 4. Write a query to find the name (first_name, last_name) of the employees who are managers.
Ans:

MariaDB [atrina]> SELECT first_name, last_name 
FROM employees 
WHERE (employee_id IN (SELECT manager_id FROM employees));


//*----------------------------------**----------------------------**//

5. Write a query to find the name (first_name, last_name), and salary of the employees whose salary is greater than the average salary.
Ans:

MariaDB [atrina]> select first_name,last_name,salary from employees where salary > (select avg(salary) from employees);



//*----------------------------------**----------------------------**//

6. Write a query to find the name (first_name, last_name), and salary of the employees whose salary is equal to the minimum salary for their job grade.
Ans:

MariaDB [atrina]> select first_name ,last_name from employees e where salary = (select min_salary from jobs where jobs.job_id = e.job_id);

//*----------------------------------**----------------------------**//
7.Write a query to find the name (first_name, last_name), and salary of the employees who earns more than the average salary and works in any of the IT departments.
Ans:

select first_name,last_name,salary from employees where department_id in (select department_id from departments where department_name like 'IT%' and salary > (select avg(salary) from employees));


//*----------------------------------**----------------------------**//
//* 8. Write a query to find the name (first_name, last_name), and salary of the employees who earns more than the earning of Mr. Bell.
Ans:

MariaDB [atrina]> select first_name,last_name,salary from employees where salary >(select salary from employees where last_name='Bell');

//*----------------------------------**----------------------------**//

//* 11. Write a query to find the name (first_name, last_name) and salary of the employees who earn a salary that is higher than the salary of all the Shipping Clerk (JOB_ID = 'SH_CLERK'). Sort the results of the salary of the lowest to highest.
Ans:

MariaDB [atrina]> select first_name,last_name,salary from employees where salary > all (select salary from employees where job_id='sh_clerk') order by salary asc;
//*----------------------------------**----------------------------**//

//* 12. Write a query to find the name (first_name, last_name) of the employees who are not supervisors.
Ans: 

 MariaDB [atrina]> select a.first_name,a.last_name from employees a where not exists (select 'dd' from employees b where a.employee_id = b.manager_id);

//*----------------------------------**----------------------------**//

//* 13.Write a query to display the employee ID, first name, last name, and department names of all employees.
Ans:

MariaDB [atrina]> SELECT employee_id, first_name, last_name, 
(SELECT department_name FROM departments d
 WHERE e.department_id = d.department_id) department 
 FROM employees e ORDER BY department;


//*----------------------------------**----------------------------**//
//* 14. Write a query to fetch even numbered records from employees table.
Ans:

MariaDB [atrina]> select i,employee_id from (select @i := @i + 1 as i,employee_id from employees) a where mod(a.i,2)=0;

//*----------------------------------**----------------------------**//
 //* 15. Write a query to find the 5th maximum salary in the employees table.
Ans:

MariaDB [atrina]> select distinct salary from employees e where 5 =(select count(distinct salary) from employees f where f.salary >= e.salary );
//*----------------------------------**----------------------------**//

//* 16.Write a query to find the 4th minimum salary in the employees table.
Ans:

MariaDB [atrina]> select distinct(salary) from employees e where 4 = (select count(distinct salary) from employees f where f.salary <= e.salary);

//*----------------------------------**----------------------------**//

//*18. Write a query to select last 10 records from a table.
Ans:

MariaDB [atrina]> select * from (select * from employees order by employee_id desc limit 10) ab order by employee_id asc
    -> ;
//*----------------------------------**----------------------------**//
 //* 19. Write a query to list the department ID and name of all the departments where no employee is working
Ans:

MariaDB [atrina]> select department_id,department_name from departments where department_id not in(select department_id from employees);
//*----------------------------------**----------------------------**//

//* 20. Write a query to get 3 maximum salaries.
Ans:

MariaDB [atrina]> select distinct salary from employees e1 where 3 >=(select count(distinct salary) from employees e2 where e2.salary >= e1.salary) order by salary asc;


//*----------------------------------**----------------------------**//

//* 21. Write a query to get 3 minimum salaries.
Ans:

MariaDB [atrina]> select distinct salary from employees e1 where 3 >= (select count(distinct salary) from employees e2 where e2.salary <= e1.salary) order by salary asc;

//*----------------------------------**----------------------------**//

//* 22. From the following table, write a SQL query to find those employees who receive a higher salary than the employee with ID 163. Return first name, last name. 
Ans:

MariaDB [atrina]> select * from employees where salary > (select salary from employees where employee_id = 163);

//*----------------------------------**----------------------------**//

//* 23.2. From the following table, write a SQL query to find out which employees have the same designation as the employee whose ID is 169. Return first name, last name, department ID and job ID. 
Ans:

MariaDB [atrina]> select first_name,last_name,job_id,department_id from employees where job_id = (select job_id from employees where employee_id = 169);


//*----------------------------------**----------------------------**//

//* 24. From the following table, write a SQL query to find those employees whose salary matches the lowest salary of any of the departments. Return first name, last name and department ID.

Ans:

MariaDB [atrina]> select first_name,last_name,salary from employees where salary in(select min(salary) from employees group by department_id);


//*----------------------------------**----------------------------**//
//* 24. 8. From the following table, write a SQL query to find those employees whose ID matches any of the numbers 134, 159 and 183. Return all the fields. 
Ans:

MariaDB [atrina]> select * from employees where employee_id in  (134,159,183);

//*----------------------------------**----------------------------**//

//* 25.From the following table, write a SQL query to find those employees whose salary is in the range of 1000, and 3000 (Begin and end values have included.). Return all the fields.
Ans:


//*----------------------------------**----------------------------**//

//* 26. From the following table and write a SQL query to find those employees whose salary falls within the range of the smallest salary and 2500. Return all the fields. 
Ans:

MariaDB [atrina]> select * from employees where salary between (select min(salary) from employees) and 3000;

//*----------------------------------**----------------------------**//

//* 27.15. From the following tables, write a SQL query to find those employees who earn more than the average salary and work in the same department as an employee whose first name contains the letter 'J'. Return employee ID, first name and salary. 
Ans:

MariaDB [atrina]> select first_name,last_name from employees where salary > (select avg(salary) from employees) and department_id in (select department_id from employees where first_name like '%j%');


//*----------------------------------**----------------------------**//
//* 28. From the following table, write a SQL query to find those employees whose department is located at ‘Toronto’. Return first name, last name, employee ID, job ID.
Ans:


MariaDB [atrina]> select * from employees where department_id = (select department_id from departments where location_id = (select location_id from locations where city = 'toronto'));

//*----------------------------------**----------------------------**//

//* 29. From the following table, write a SQL query to find those employees whose salary is lower than that of employees whose job title is ‘MK_MAN’. Return employee ID, first name, last name, job ID.
Ans:

MariaDB [atrina]> select * from employees where salary < (select salary from employees where job_id = 'mk_man');

//*----------------------------------**----------------------------**//

//* 30. From the following table, write a SQL query to find those employees whose salary is lower than that of employees whose job title is "MK_MAN". Exclude employees of Job title ‘MK_MAN’. Return employee ID, first name, last name, job ID. 
Ans:


MariaDB [atrina]> select * from employees where salary < ANY (select salary from employees where job_id = 'mk_man') and  job_id <> 'mk_man';

//*----------------------------------**----------------------------**//

//* 31.  From the following table, write a SQL query to find those employees whose salary exceeds the salary of all those employees whose job title is "PU_MAN". Exclude job title ‘PU_MAN’. Return employee ID, first name, last name, job ID.
Ans

MariaDB [atrina]>
MariaDB [atrina]> select * from employees where salary > All (select salary from employees where job_id = 'pu_man') and job_id<> 'pu_man';

//*----------------------------------**----------------------------**//

//* 32. From the following table, write a SQL query to find those employees whose salaries are higher than the average for all departments. Return employee ID, first name, last name, job ID.   Go to the editor
Ans:

MariaDB [atrina]>
MariaDB [atrina]> select * from employees where salary > all(select avg(salary) from employees group by department_id);

//*----------------------------------**----------------------------**//

//* 33. From the following table, write a SQL query to calculate total salary of the departments where at least one employee works. Return department ID, total salary.
Ans:

MariaDB [atrina]> select d.department_id, res.totsal from departments d, (select department_id, sum(salary) totsal from employees group by department_id) as res where res.department_id = d.department_id;


//*----------------------------------**----------------------------**//

//* 34.Write a query to display the employee id, name ( first name and last name ) and the job id column with a modified title SALESMAN for those employees whose job title is ST_MAN and DEVELOPER for whose job title is IT_PROG.
Ans:

MariaDB [atrina]> select employee_id,First_name,last_name ,
    -> case job_id
    -> when 'st_man' then 'SalesMan'
    -> when 'it_prog' then 'Developer'
    -> else job_id
    -> end as desgination,salary
    -> from employees;

//*----------------------------------**----------------------------**//

//* 35. Write a query to display the employee id, name ( first name and last name ), salary and the SalaryStatus column with a title HIGH and LOW respectively for those employees whose salary is more than and less than the average salary of all employees.
Ans:

SELECT  employee_id,  first_name, last_name, salary,  
CASE WHEN salary >= (SELECT AVG(salary) 
FROM employees) THEN 'HIGH'  
ELSE 'LOW'  
END AS SalaryStatus 
FROM employees;


//*----------------------------------**----------------------------**//

//* 36. From the following table, write a SQL query to find all those departments where at least one employee is employed. Return department name.
Ans:

MariaDB [atrina]> select department_name from departments where department_id in (select distinct(department_id) from employees);

//*----------------------------------**----------------------------**//

//* 37. From the following tables, write a SQL query to find employees who work in departments located in the United Kingdom. Return first name.
Ans:

MariaDB [atrina]> SELECT * FROM employees WHERE department_id in (SELECT department_id FROM departments WHERE location_id in (SELECT location_id FROM locations WHERE country_id in (SELECT country_id FROM countries WHERE country_name = "united kingdom")));
//*----------------------------------**----------------------------**//

//* 38. From the following tables, write a SQL query to find those employees whose salaries exceed 50% of their department's total salary bill. Return first name, last name.
Ans:

select first_name,last_name,salary from employees where salary > (select (sum(salary)/2) from employees group by department_id);
//*----------------------------------**----------------------------**//

//* 39.From the following tables, write a SQL query to find those employees whose salaries exceed 50% of their department's total salary bill. Return first name, last name.
Ans:


MariaDB [atrina]> select first_name,last_name,salary from employees e1 where salary > all (select (sum(salary)/2) from employees e2 where e1.department_id = e2.department_id);

//*----------------------------------**----------------------------**//

//* 40. From the following tables, write a SQL query to find those employees who are managers. Return all the fields of employees table.

Ans:

MariaDB [atrina]> select * from employees where exists(select * from departments where manager_id = employee_id);
+

//*----------------------------------**----------------------------**//

//* 41. From the following table, write a SQL query to find those employees who manage a department. Return all the fields of employees table.

Ans:
MariaDB [atrina]> select * from employees where employee_id =  any(select manager_id from departments);

//*----------------------------------**----------------------------**//

//* 42. From the following table, write a SQL query to search for employees who receive such a salary, which is the maximum salary for salaried employees, hired between January 1st, 2002 and December 31st, 2003. Return employee ID, first name, last name, salary, department name and city.
Ans:

SELECT a.employee_id, a.first_name, a.last_name, a.salary, b.department_name, c.city  
FROM employees a, departments b, locations c  
WHERE a.salary =  
(SELECT MAX(salary) 
FROM employees 
WHERE hire_date BETWEEN '01/01/2002' AND '12/31/2003') 
AND a.department_id=b.department_id 
AND b.location_id=c.location_id;


//*----------------------------------**----------------------------**//

//* 44. . From the following table, write a SQL query to find those employees who earn more than the average salary. Sort the result-set in descending order by salary. Return first name, last name, salary, and department ID.   Go to the editor
Ans:


MariaDB [atrina]> select first_name,last_name,department_id ,salary from employees where salary >(select avg(salary) from employees) order by salary desc;
//*----------------------------------**----------------------------**//

//* 45.From the following table, write a SQL query to find those employees who earn more than the maximum salary for a department of ID 40. Return first name, last name and department ID.
Ans:

MariaDB [atrina]> select first_name,last_name,department_id ,salary from employees where salary > (select max(salary) from employees where department_id=40);
//*----------------------------------**----------------------------**//

//46.From the following table, write a SQL query to find departments for a particular location. The location matches the location of the department of ID 30. Return department name and department ID.
Ans:


MariaDB [atrina]> select department_id,department_name from departments where location_id =(select location_id from departments where department_id = 30);

//*----------------------------------**----------------------------**//

//47. From the following table, write a SQL query to find employees who work for the department in which employee ID 201 is employed. Return first name, last name, salary, and department ID. 
Ans:


MariaDB [atrina]> select first_name,last_name,department_id ,salary from employees where department_id = (select department_id from employees where employee_id = 201);
//*----------------------------------**----------------------------**//

//* 48.  From the following table, write a SQL query to find those employees whose salary matches that of the employee who works in department ID 40. Return first name, last name, salary, and department ID.
Ans:

MariaDB [atrina]> select first_name,last_name,department_id ,salary from employees where salary = (select salary from employees where department_id = 40);

//*----------------------------------**----------------------------**//

//* 49. From the following table, write a SQL query to find those employees who joined after the employee whose ID is 165. Return first name, last name and hire date. 
Ans:

MariaDB [atrina]> select first_name,last_name,department_id ,salary from employees where hire_date > (select hire_date from employees where employee_id = 165);

//*----------------------------------**----------------------------**//

//* 50.From the following table, write a SQL query to find those employees who earn less than the minimum salary of a department of ID 70. Return first name, last name, salary, and department ID.  
Ans:

select first_name,last_name ,salary from employees where salary < all(select salary from employees where department_id = 70);

//*----------------------------------**----------------------------**//


//* 51.  From the following table, write a SQL query to find those employees who earn less than the average salary and work at the department where Laura (first name) is employed. Return first name, last name, salary, and department ID. 
Ans:

SELECT first_name, last_name, salary, department_id 
 FROM employees
   WHERE salary < 
      (SELECT AVG(salary) 
        FROM employees )
         AND department_id = 
               (SELECT department_id 
                 FROM employees 
                  WHERE first_name = 'Laura');

//*----------------------------------**----------------------------**//

///* 52. From the following tables, write a SQL query to find the city of the employee of ID 134. Return city.
Ans:

select city from locations where location_id = (select location_id from departments where department_id = (select department_id from employees where employee_id = 134));

//*----------------------------------**----------------------------**//

//* 53. From the following tables, write a SQL query to find those departments where maximum salary is 7000 and above. The employees worked in those departments have already completed one or more jobs. Return all the fields of the departments.
Ans:

 SELECT *
    -> FROM departments
    -> WHERE DEPARTMENT_ID IN
    ->     (SELECT DEPARTMENT_ID
    ->      FROM employees
    ->      WHERE EMPLOYEE_ID IN
    ->          (SELECT EMPLOYEE_ID
    ->           FROM job_history
    ->           GROUP BY EMPLOYEE_ID
    ->           HAVING COUNT(EMPLOYEE_ID) > 1)
    ->      GROUP BY DEPARTMENT_ID

//*----------------------------------**----------------------------**//

//* 54.From the following tables, write a SQL query to find those departments where the starting salary is at least 8000. Return all the fields of departments.
Ans:

SELECT * FROM departments 
	WHERE department_id IN 
		( SELECT department_id 
                   FROM employees 
			GROUP BY department_id 
				HAVING MIN(salary)>=8000);

//*----------------------------------**----------------------------**//

//* 55. From the following table, write a SQL query to find those managers who supervise four or more employees. Return manager name, department ID.
Ans:

MariaDB [atrina]> select * from employees where employee_id in(select manager_id from employees group by manager_id having count(manager_id) >= 4);

//*----------------------------------**----------------------------**//

//* 56. From the following table, write a SQL query to find employees who have previously worked as 'Sales Representatives'. Return all the fields of jobs.
Ans:

SELECT * 
	FROM jobs 
		WHERE job_id IN 
		(SELECT job_id 
			FROM employees 
				WHERE employee_id IN 
        (SELECT employee_id 
			FROM job_history 
				WHERE job_id='SA_REP'));
//*----------------------------------**----------------------------**//


//* 57.From the following table, write a SQL query to find those employees who earn the second-lowest salary of all the employees. Return all the fields of employees .
Ans:


MariaDB [atrina]> select * from employees e1 where 2 = (select count(distinct salary) from employees e2 where e1.salary >= e2.salary);
//*----------------------------------**----------------------------**//

//* 58.From the following table, write a SQL query to find the departments managed by Susan. Return all the fields of departments.
Ans:


MariaDB [atrina]> SELECT * 
	FROM departments 
	WHERE manager_id IN 
	(SELECT employee_id 
		FROM employees 
			WHERE first_name='Susan');

//*----------------------------------**----------------------------**//

//* 59. From the following table, write a SQL query to find those employees who earn the highest salary in a department. Return department ID, employee name, and salary.
Ans:

select first_name,last_name,salary,department_id from employees e1 where salary in (select max(salary) from employees e2 where e1.department_id = e2.department_id);
//*----------------------------------**----------------------------**//

//* 60. From the following table, write a SQL query to find those employees who have not had a job in the past. Return all the fields of employees.
Ans:


MariaDB [atrina]> select first_name,last_name,salary,department_id from employees e1 where employee_id not in (select employee_id from job_history );
//*----------------------------------**----------------------------**//

Ans: